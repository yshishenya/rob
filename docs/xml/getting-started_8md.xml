<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="getting-started_8md" kind="file" language="Markdown">
    <compoundname>getting-started.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Getting<sp/>Started</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>0**<sp/>-<sp/>Install<sp/>Python<sp/>3.11<sp/>or<sp/>later.<sp/>[See<sp/>here](https://www.tutorialsteacher.com/python/install-python)<sp/>for<sp/>a<sp/>step-by-step<sp/>guide.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>1**<sp/>-<sp/>Download<sp/>the<sp/>project<sp/>and<sp/>navigate<sp/>to<sp/>its<sp/>directory</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>git<sp/>clone<sp/>https://github.com/assafelovic/gpt-researcher.git</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cd<sp/>gpt-researcher</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>3**<sp/>-<sp/>Set<sp/>up<sp/>API<sp/>keys<sp/>using<sp/>two<sp/>methods:<sp/>exporting<sp/>them<sp/>directly<sp/>or<sp/>storing<sp/>them<sp/>in<sp/>a<sp/>`.env`<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>Linux/Temporary<sp/>Windows<sp/>Setup,<sp/>use<sp/>the<sp/>export<sp/>method:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">export<sp/>OPENAI_API_KEY={Your<sp/>OpenAI<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">export<sp/>TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>a<sp/>more<sp/>permanent<sp/>setup,<sp/>create<sp/>a<sp/>`.env`<sp/>file<sp/>in<sp/>the<sp/>current<sp/>`gpt-researcher`<sp/>folder<sp/>and<sp/>input<sp/>the<sp/>keys<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">OPENAI_API_KEY={Your<sp/>OpenAI<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**For<sp/>LLM,<sp/>we<sp/>recommend<sp/>[OpenAI<sp/>GPT](https://platform.openai.com/docs/guides/gpt)**,<sp/>but<sp/>you<sp/>can<sp/>use<sp/>any<sp/>other<sp/>LLM<sp/>model<sp/>(including<sp/>open<sp/>sources)<sp/>supported<sp/>by<sp/>[Langchain<sp/>Adapter](https://python.langchain.com/docs/guides/adapters/openai),<sp/>simply<sp/>change<sp/>the<sp/>llm<sp/>model<sp/>and<sp/>provider<sp/>in<sp/>config/config.py.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**For<sp/>search<sp/>engine,<sp/>we<sp/>recommend<sp/>[Tavily<sp/>Search<sp/>API](https://app.tavily.com)**,<sp/>but<sp/>you<sp/>can<sp/>also<sp/>refer<sp/>to<sp/>other<sp/>search<sp/>engines<sp/>of<sp/>your<sp/>choice<sp/>by<sp/>changing<sp/>the<sp/>search<sp/>provider<sp/>in<sp/>config/config.py<sp/>to<sp/>`&quot;duckduckgo&quot;`,<sp/>`&quot;googleAPI&quot;`,<sp/>`&quot;bing&quot;`,<sp/>`&quot;googleSerp&quot;`,<sp/>or<sp/>`&quot;searx&quot;`.<sp/>Then<sp/>add<sp/>the<sp/>corresponding<sp/>env<sp/>API<sp/>key<sp/>as<sp/>seen<sp/>in<sp/>the<sp/>config.py<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Quickstart</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>1**<sp/>-<sp/>Install<sp/>dependencies</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>pip<sp/>install<sp/>-r<sp/>requirements.txt</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>2**<sp/>-<sp/>Run<sp/>the<sp/>agent<sp/>with<sp/>FastAPI</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>uvicorn<sp/>main:app<sp/>--reload</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>3**<sp/>-<sp/>Go<sp/>to<sp/>http://localhost:8000<sp/>on<sp/>any<sp/>browser<sp/>and<sp/>enjoy<sp/>researching!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Using<sp/>Virtual<sp/>Environment<sp/>or<sp/>Poetry</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Select<sp/>either<sp/>based<sp/>on<sp/>your<sp/>familiarity<sp/>with<sp/>each:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Virtual<sp/>Environment</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>_Establishing<sp/>the<sp/>Virtual<sp/>Environment<sp/>with<sp/>Activate/Deactivate<sp/>configuration_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>virtual<sp/>environment<sp/>using<sp/>the<sp/>`venv`<sp/>package<sp/>with<sp/>the<sp/>environment<sp/>name<sp/>`&lt;your_name&gt;`,<sp/>for<sp/>example,<sp/>`env`.<sp/>Execute<sp/>the<sp/>following<sp/>command<sp/>in<sp/>the<sp/>PowerShell/CMD<sp/>terminal:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">python<sp/>-m<sp/>venv<sp/>env</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>activate<sp/>the<sp/>virtual<sp/>environment,<sp/>use<sp/>the<sp/>following<sp/>activation<sp/>script<sp/>in<sp/>PowerShell/CMD<sp/>terminal:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">.\env\Scripts\activate</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>deactivate<sp/>the<sp/>virtual<sp/>environment,<sp/>run<sp/>the<sp/>following<sp/>deactivation<sp/>script<sp/>in<sp/>PowerShell/CMD<sp/>terminal:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">deactivate</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>_Install<sp/>the<sp/>dependencies<sp/>for<sp/>a<sp/>Virtual<sp/>environment_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>activating<sp/>the<sp/>`env`<sp/>environment,<sp/>install<sp/>dependencies<sp/>using<sp/>the<sp/>`requirements.txt`<sp/>file<sp/>with<sp/>the<sp/>following<sp/>command:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">python<sp/>-m<sp/>pip<sp/>install<sp/>-r<sp/>requirements.txt</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;br<sp/>/&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Poetry</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>_Establishing<sp/>the<sp/>Poetry<sp/>dependencies<sp/>and<sp/>virtual<sp/>environment<sp/>with<sp/>Poetry<sp/>version<sp/>`~1.7.1`_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Install<sp/>project<sp/>dependencies<sp/>and<sp/>simultaneously<sp/>create<sp/>a<sp/>virtual<sp/>environment<sp/>for<sp/>the<sp/>specified<sp/>project.<sp/>By<sp/>executing<sp/>this<sp/>command,<sp/>Poetry<sp/>reads<sp/>the<sp/>project&apos;s<sp/>&quot;pyproject.toml&quot;<sp/>file<sp/>to<sp/>determine<sp/>the<sp/>required<sp/>dependencies<sp/>and<sp/>their<sp/>versions,<sp/>ensuring<sp/>a<sp/>consistent<sp/>and<sp/>isolated<sp/>development<sp/>environment.<sp/>The<sp/>virtual<sp/>environment<sp/>allows<sp/>for<sp/>a<sp/>clean<sp/>separation<sp/>of<sp/>project-specific<sp/>dependencies,<sp/>preventing<sp/>conflicts<sp/>with<sp/>system-wide<sp/>packages<sp/>and<sp/>enabling<sp/>more<sp/>straightforward<sp/>dependency<sp/>management<sp/>throughout<sp/>the<sp/>project&apos;s<sp/>lifecycle.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">poetry<sp/>install</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>_Activate<sp/>the<sp/>virtual<sp/>environment<sp/>associated<sp/>with<sp/>a<sp/>Poetry<sp/>project_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">By<sp/>running<sp/>this<sp/>command,<sp/>the<sp/>user<sp/>enters<sp/>a<sp/>shell<sp/>session<sp/>within<sp/>the<sp/>isolated<sp/>environment<sp/>associated<sp/>with<sp/>the<sp/>project,<sp/>providing<sp/>a<sp/>dedicated<sp/>space<sp/>for<sp/>development<sp/>and<sp/>execution.<sp/>This<sp/>virtual<sp/>environment<sp/>ensures<sp/>that<sp/>the<sp/>project<sp/>dependencies<sp/>are<sp/>encapsulated,<sp/>avoiding<sp/>conflicts<sp/>with<sp/>system-wide<sp/>packages.<sp/>Activating<sp/>the<sp/>Poetry<sp/>shell<sp/>is<sp/>essential<sp/>for<sp/>seamlessly<sp/>working<sp/>on<sp/>a<sp/>project,<sp/>as<sp/>it<sp/>ensures<sp/>that<sp/>the<sp/>correct<sp/>versions<sp/>of<sp/>dependencies<sp/>are<sp/>used<sp/>and<sp/>provides<sp/>a<sp/>controlled<sp/>environment<sp/>conducive<sp/>to<sp/>efficient<sp/>development<sp/>and<sp/>testing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">poetry<sp/>shell</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>_Run<sp/>the<sp/>app_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>Launch<sp/>the<sp/>FastAPI<sp/>application<sp/>agent<sp/>on<sp/>a<sp/>_Virtual<sp/>Environment<sp/>or<sp/>Poetry_<sp/>setup<sp/>by<sp/>executing<sp/>the<sp/>following<sp/>command:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">python<sp/>-m<sp/>uvicorn<sp/>main:app<sp/>--reload</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>Visit<sp/>http://localhost:8000<sp/>in<sp/>any<sp/>web<sp/>browser<sp/>and<sp/>explore<sp/>your<sp/>research!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;br<sp/>/&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Try<sp/>it<sp/>with<sp/>Docker</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>1**<sp/>-<sp/>Install<sp/>Docker</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Follow<sp/>instructions<sp/>at<sp/>https://docs.docker.com/engine/install/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>2**<sp/>-<sp/>Create<sp/>.env<sp/>file<sp/>with<sp/>your<sp/>OpenAI<sp/>Key<sp/>or<sp/>simply<sp/>export<sp/>it</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>export<sp/>OPENAI_API_KEY={Your<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">$<sp/>export<sp/>TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>3**<sp/>-<sp/>Run<sp/>the<sp/>application</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>docker-compose<sp/>up</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**Step<sp/>4**<sp/>-<sp/>Go<sp/>to<sp/>http://localhost:8000<sp/>on<sp/>any<sp/>browser<sp/>and<sp/>enjoy<sp/>researching!</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/yshishenya/rob/docs/docs/gpt-researcher/getting-started.md"/>
  </compounddef>
</doxygen>
