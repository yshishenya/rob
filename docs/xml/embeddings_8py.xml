<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="embeddings_8py" kind="file" language="Python">
    <compoundname>embeddings.py</compoundname>
    <innerclass refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory" prot="public">gpt_researcher::memory::embeddings::Memory</innerclass>
    <innernamespace refid="namespacegpt__researcher">gpt_researcher</innernamespace>
    <innernamespace refid="namespacegpt__researcher_1_1memory">gpt_researcher::memory</innernamespace>
    <innernamespace refid="namespacegpt__researcher_1_1memory_1_1embeddings">gpt_researcher::memory::embeddings</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegpt__researcher_1_1memory_1_1embeddings" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain_community.vectorstores<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FAISS</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="3" refid="namespacegpt__researcher_1_1memory_1_1embeddings_1acba50864a73b23ad689f762c7805e8cd" refkind="member"><highlight class="normal">OPENAI_EMBEDDING_MODEL<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text-embedding-3-large&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory" kindref="compound">Memory</ref>:</highlight></codeline>
<codeline lineno="6" refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1a2dfbbd19d7252848527a7be807d7aec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1a2dfbbd19d7252848527a7be807d7aec2" kindref="member">__init__</ref>(self,<sp/>embedding_provider,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>embedding_provider:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/></highlight><highlight class="stringliteral">&quot;ollama&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain_community.embeddings<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OllamaEmbeddings</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/>OllamaEmbeddings(model=os.environ[</highlight><highlight class="stringliteral">&quot;OLLAMA_EMBEDDING_MODEL&quot;</highlight><highlight class="normal">],<sp/>base_url=os.environ[</highlight><highlight class="stringliteral">&quot;OLLAMA_BASE_URL&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/></highlight><highlight class="stringliteral">&quot;custom&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain_openai<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OpenAIEmbeddings</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/>OpenAIEmbeddings(model=os.environ.get(</highlight><highlight class="stringliteral">&quot;OPENAI_EMBEDDING_MODEL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;custom&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openai_api_key=os.environ.get(</highlight><highlight class="stringliteral">&quot;OPENAI_API_KEY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;custom&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openai_api_base=os.environ.get(</highlight><highlight class="stringliteral">&quot;OPENAI_BASE_URL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://localhost:1234/v1&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">#default<sp/>for<sp/>lmstudio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_embedding_ctx_length=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#quick<sp/>fix<sp/>for<sp/>lmstudio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/></highlight><highlight class="stringliteral">&quot;openai&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain_openai<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OpenAIEmbeddings</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/>OpenAIEmbeddings(model=OPENAI_EMBEDDING_MODEL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/></highlight><highlight class="stringliteral">&quot;azureopenai&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain_openai<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AzureOpenAIEmbeddings</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/>AzureOpenAIEmbeddings(deployment=os.environ[</highlight><highlight class="stringliteral">&quot;AZURE_EMBEDDING_MODEL&quot;</highlight><highlight class="normal">],<sp/>chunk_size=16)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/></highlight><highlight class="stringliteral">&quot;huggingface&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>langchain.embeddings<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>HuggingFaceEmbeddings</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_embeddings<sp/>=<sp/>HuggingFaceEmbeddings()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>_:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Embedding<sp/>provider<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1ad6b2a0649b3d9ec7438383e48f581cdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1ad6b2a0649b3d9ec7438383e48f581cdb" kindref="member">_embeddings</ref><sp/>=<sp/>_embeddings</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1a5a51c5c0866249bb8b164cd6e12346eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1a5a51c5c0866249bb8b164cd6e12346eb" kindref="member">get_embeddings</ref>(self):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classgpt__researcher_1_1memory_1_1embeddings_1_1Memory_1ad6b2a0649b3d9ec7438383e48f581cdb" kindref="member">_embeddings</ref></highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/yshishenya/rob/gpt_researcher/memory/embeddings.py"/>
  </compounddef>
</doxygen>
