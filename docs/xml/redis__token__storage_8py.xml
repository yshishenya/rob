<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="redis__token__storage_8py" kind="file" language="Python">
    <compoundname>redis_token_storage.py</compoundname>
    <innerclass refid="classredis__token__storage_1_1RedisTokenStorage" prot="public">redis_token_storage::RedisTokenStorage</innerclass>
    <innernamespace refid="namespaceredis__token__storage">redis_token_storage</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceredis__token__storage" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>redis</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.token_storage<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TokenStorage</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespaceredis__token__storage_1ae296e174099af70544544300ed12bfa3" refkind="member"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(__name__)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classredis__token__storage_1_1RedisTokenStorage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage" kindref="compound">RedisTokenStorage</ref>(<ref refid="classtoken__storage_1_1TokenStorage" kindref="compound">TokenStorage</ref>):</highlight></codeline>
<codeline lineno="10" refid="classredis__token__storage_1_1RedisTokenStorage_1a3d45b35c6cf8b5919ac3fe21cfa69479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1a3d45b35c6cf8b5919ac3fe21cfa69479" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REDIS_HOST<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;redis&apos;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>&apos;localhost&apos;<sp/>if<sp/>connecting<sp/>locally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REDIS_PORT<sp/>=<sp/>os.environ.get(</highlight><highlight class="stringliteral">&apos;REDIS_PORT&apos;</highlight><highlight class="normal">,<sp/>6379)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REDIS_PASSWORD<sp/>=<sp/>os.environ.get(</highlight><highlight class="stringliteral">&apos;REDIS_PASSWORD&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>Redis<sp/>at<sp/>{REDIS_HOST}:{REDIS_PORT}<sp/>with<sp/>password<sp/>set:<sp/>{&apos;yes&apos;<sp/>if<sp/>REDIS_PASSWORD<sp/>else<sp/>&apos;no&apos;}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15" refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref><sp/>=<sp/>redis.Redis(host=REDIS_HOST,<sp/>port=REDIS_PORT,<sp/>db=0,<sp/>password=REDIS_PASSWORD)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.ping()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>Redis<sp/>successfully.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>redis.ConnectionError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>Redis<sp/>at<sp/>{REDIS_HOST}:{REDIS_PORT}:<sp/>{e}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ConnectionError(f</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>Redis:<sp/>{e}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classredis__token__storage_1_1RedisTokenStorage_1a229c35362e7af88b6096b2b5cb3048f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1a229c35362e7af88b6096b2b5cb3048f0" kindref="member">store_token</ref>(self,<sp/>token,<sp/>user_id,<sp/>expires_in):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Сохраняем<sp/>токен<sp/>с<sp/>временем<sp/>жизни</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.setex(f</highlight><highlight class="stringliteral">&quot;token:{token}&quot;</highlight><highlight class="normal">,<sp/>expires_in,<sp/>user_id)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Добавляем<sp/>токен<sp/>в<sp/>множество<sp/>токенов<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.sadd(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:tokens&quot;</highlight><highlight class="normal">,<sp/>token)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Устанавливаем<sp/>время<sp/>жизни<sp/>для<sp/>каждого<sp/>токена<sp/>в<sp/>множестве<sp/>индивидуально</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Это<sp/>строка<sp/>не<sp/>нужна,<sp/>так<sp/>как<sp/>TTL<sp/>устанавливается<sp/>для<sp/>каждого<sp/>токена<sp/>при<sp/>его<sp/>создании</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.redis_client.expire(f&quot;user:{user_id}:tokens&quot;,<sp/>expires_in)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Token<sp/>for<sp/>user<sp/>{user_id}<sp/>stored<sp/>successfully<sp/>with<sp/>expiration<sp/>of<sp/>{expires_in}<sp/>seconds.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classredis__token__storage_1_1RedisTokenStorage_1aae0f0d43778c74ad44f4ee381151e7d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1aae0f0d43778c74ad44f4ee381151e7d0" kindref="member">retrieve_token</ref>(self,<sp/>token):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Получаем<sp/>user_id<sp/>по<sp/>токену</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.get(f</highlight><highlight class="stringliteral">&quot;token:{token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user_id.decode()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classredis__token__storage_1_1RedisTokenStorage_1aaefb2d86c8ecfcfc7b4d6fc668b0142f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1aaefb2d86c8ecfcfc7b4d6fc668b0142f" kindref="member">delete_token</ref>(self,<sp/>token):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Получаем<sp/>user_id<sp/>по<sp/>токену</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.get(f</highlight><highlight class="stringliteral">&quot;token:{token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_id:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>user_id.decode()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>токен</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.delete(f</highlight><highlight class="stringliteral">&quot;token:{token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>токен<sp/>из<sp/>списка<sp/>токенов<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.srem(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:tokens&quot;</highlight><highlight class="normal">,<sp/>token)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Token<sp/>{token}<sp/>for<sp/>user<sp/>{user_id}<sp/>deleted<sp/>successfully.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(f</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>delete<sp/>non-existing<sp/>token:<sp/>{token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classredis__token__storage_1_1RedisTokenStorage_1a025c443b1f988143a8f3624a2457a08b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1a025c443b1f988143a8f3624a2457a08b" kindref="member">delete_tokens_by_user_id</ref>(self,<sp/>user_id):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Получаем<sp/>все<sp/>токены<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.smembers(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:tokens&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tokens:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Создаем<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.pipeline()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>каждый<sp/>токен</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tokens:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.delete(f</highlight><highlight class="stringliteral">&quot;token:{token.decode()}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>список<sp/>токенов<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.delete(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:tokens&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Выполняем<sp/>все<sp/>команды<sp/>в<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.execute()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classredis__token__storage_1_1RedisTokenStorage_1ad6e7f032c2664d750982ac60025c24f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1ad6e7f032c2664d750982ac60025c24f3" kindref="member">store_refresh_token</ref>(self,<sp/>refresh_token,<sp/>user_id,<sp/>expires_in):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Сохраняем<sp/>токен<sp/>обновления<sp/>с<sp/>временем<sp/>жизни</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.setex(f</highlight><highlight class="stringliteral">&quot;refresh_token:{refresh_token}&quot;</highlight><highlight class="normal">,<sp/>expires_in,<sp/>user_id)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Добавляем<sp/>токен<sp/>обновления<sp/>в<sp/>множество<sp/>токенов<sp/>обновления<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.sadd(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:refresh_tokens&quot;</highlight><highlight class="normal">,<sp/>refresh_token)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Refresh<sp/>token<sp/>for<sp/>user<sp/>{user_id}<sp/>stored<sp/>successfully<sp/>with<sp/>expiration<sp/>of<sp/>{expires_in}<sp/>seconds.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classredis__token__storage_1_1RedisTokenStorage_1a03d7fa22c6b5371b7254205ae9038ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1a03d7fa22c6b5371b7254205ae9038ca8" kindref="member">retrieve_user_id_by_refresh_token</ref>(self,<sp/>refresh_token):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.get(f</highlight><highlight class="stringliteral">&quot;refresh_token:{refresh_token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>user<sp/>ID<sp/>for<sp/>refresh<sp/>token:<sp/>{refresh_token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>user_id.decode()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classredis__token__storage_1_1RedisTokenStorage_1ad4043839e9087a9580f0cdb73e61ec0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1ad4043839e9087a9580f0cdb73e61ec0b" kindref="member">delete_refresh_token</ref>(self,<sp/>refresh_token):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.get(f</highlight><highlight class="stringliteral">&quot;refresh_token:{refresh_token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_id:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_id<sp/>=<sp/>user_id.decode()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.srem(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:refresh_tokens&quot;</highlight><highlight class="normal">,<sp/>refresh_token)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.delete(f</highlight><highlight class="stringliteral">&quot;refresh_token:{refresh_token}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classredis__token__storage_1_1RedisTokenStorage_1ae8dd99f867d56a7d22cc51abe948835c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classredis__token__storage_1_1RedisTokenStorage_1ae8dd99f867d56a7d22cc51abe948835c" kindref="member">delete_all_refresh_tokens_by_user_id</ref>(self,<sp/>user_id):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refresh_tokens<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.smembers(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:refresh_tokens&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>refresh_tokens:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Создаем<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline<sp/>=<sp/>self.<ref refid="classredis__token__storage_1_1RedisTokenStorage_1a0a2f119e8aa413a742b8b2a6705ab049" kindref="member">redis_client</ref>.pipeline()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>каждый<sp/>токен<sp/>обновления</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>refresh_token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>refresh_tokens:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.delete(f</highlight><highlight class="stringliteral">&quot;refresh_token:{refresh_token.decode()}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Удаляем<sp/>список<sp/>токенов<sp/>обновления<sp/>пользователя</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.delete(f</highlight><highlight class="stringliteral">&quot;user:{user_id}:refresh_tokens&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Выполняем<sp/>все<sp/>команды<sp/>в<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pipeline.execute()</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/yshishenya/rob/backend/auth/redis_token_storage.py"/>
  </compounddef>
</doxygen>
