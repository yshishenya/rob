<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started" kind="page">
    <compoundname>md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started</compoundname>
    <title>Getting Started</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md82"/> <blockquote><para><zwj/><bold>Step 0</bold> - Install Python 3.11 or later. <ulink url="https://www.tutorialsteacher.com/python/install-python">See here</ulink> for a step-by-step guide. </para>
</blockquote><blockquote><para><zwj/><bold>Step 1</bold> - Download the project and navigate to its directory </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">$<sp/>git<sp/>clone<sp/>https://github.com/assafelovic/gpt-researcher.git</highlight></codeline>
<codeline><highlight class="normal">$<sp/>cd<sp/>gpt-researcher</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/><bold>Step 3</bold> - Set up API keys using two methods: exporting them directly or storing them in a <computeroutput>.env</computeroutput> file. </para>
</blockquote>For Linux/Temporary Windows Setup, use the export method:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">export<sp/>OPENAI_API_KEY={Your<sp/>OpenAI<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">export<sp/>TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
</programlisting></para>
<para>For a more permanent setup, create a <computeroutput>.env</computeroutput> file in the current <computeroutput>gpt-researcher</computeroutput> folder and input the keys as follows:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">OPENAI_API_KEY={Your<sp/>OpenAI<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para><bold>For LLM, we recommend <ulink url="https://platform.openai.com/docs/guides/gpt">OpenAI GPT</ulink></bold>, but you can use any other LLM model (including open sources) supported by <ulink url="https://python.langchain.com/docs/guides/adapters/openai">Langchain Adapter</ulink>, simply change the llm model and provider in <ref refid="config_8py" kindref="compound">config/config.py</ref>.</para>
</listitem><listitem><para><bold>For search engine, we recommend <ulink url="https://app.tavily.com">Tavily Search API</ulink></bold>, but you can also refer to other search engines of your choice by changing the search provider in <ref refid="config_8py" kindref="compound">config/config.py</ref> to <computeroutput>&quot;duckduckgo&quot;</computeroutput>, <computeroutput>&quot;googleAPI&quot;</computeroutput>, <computeroutput>&quot;bing&quot;</computeroutput>, <computeroutput>&quot;googleSerp&quot;</computeroutput>, or <computeroutput>&quot;searx&quot;</computeroutput>. Then add the corresponding env API key as seen in the <ref refid="config_8py" kindref="compound">config.py</ref> file.</para>
</listitem></itemizedlist>
</para>
<sect1 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md83">
<title>Quickstart</title><para><blockquote><para><zwj/><bold>Step 1</bold> - Install dependencies </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">$<sp/>pip<sp/>install<sp/>-r<sp/>requirements.txt</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/><bold>Step 2</bold> - Run the agent with FastAPI </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">$<sp/>uvicorn<sp/>main:app<sp/>--reload</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/><bold>Step 3</bold> - Go to <ulink url="http://localhost:8000">http://localhost:8000</ulink> on any browser and enjoy researching! </para>
</blockquote></para>
</sect1>
<sect1 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md84">
<title>Using Virtual Environment or Poetry</title><para>Select either based on your familiarity with each:</para>
<sect2 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md85">
<title>Virtual Environment</title><sect3 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md86">
<title><emphasis>Establishing the Virtual Environment with Activate/Deactivate configuration</emphasis></title><para>Create a virtual environment using the <computeroutput>venv</computeroutput> package with the environment name <computeroutput>&lt;your_name&gt;</computeroutput>, for example, <computeroutput>env</computeroutput>. Execute the following command in the PowerShell/CMD terminal:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">python<sp/>-m<sp/>venv<sp/>env</highlight></codeline>
</programlisting></para>
<para>To activate the virtual environment, use the following activation script in PowerShell/CMD terminal:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">.\env\Scripts\activate</highlight></codeline>
</programlisting></para>
<para>To deactivate the virtual environment, run the following deactivation script in PowerShell/CMD terminal:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">deactivate</highlight></codeline>
</programlisting></para>
</sect3>
<sect3 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md87">
<title><emphasis>Install the dependencies for a Virtual environment</emphasis></title><para>After activating the <computeroutput>env</computeroutput> environment, install dependencies using the <computeroutput>requirements.txt</computeroutput> file with the following command:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">python<sp/>-m<sp/>pip<sp/>install<sp/>-r<sp/>requirements.txt</highlight></codeline>
</programlisting></para>
<para><linebreak/>
</para>
</sect3>
</sect2>
<sect2 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md88">
<title>Poetry</title><sect3 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md89">
<title><emphasis>Establishing the Poetry dependencies and virtual environment with Poetry version <computeroutput>~1.7.1</computeroutput></emphasis></title><para>Install project dependencies and simultaneously create a virtual environment for the specified project. By executing this command, Poetry reads the project&apos;s &quot;pyproject.toml&quot; file to determine the required dependencies and their versions, ensuring a consistent and isolated development environment. The virtual environment allows for a clean separation of project-specific dependencies, preventing conflicts with system-wide packages and enabling more straightforward dependency management throughout the project&apos;s lifecycle.</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">poetry<sp/>install</highlight></codeline>
</programlisting></para>
</sect3>
<sect3 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md90">
<title><emphasis>Activate the virtual environment associated with a Poetry project</emphasis></title><para>By running this command, the user enters a shell session within the isolated environment associated with the project, providing a dedicated space for development and execution. This virtual environment ensures that the project dependencies are encapsulated, avoiding conflicts with system-wide packages. Activating the Poetry shell is essential for seamlessly working on a project, as it ensures that the correct versions of dependencies are used and provides a controlled environment conducive to efficient development and testing.</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">poetry<sp/>shell</highlight></codeline>
</programlisting></para>
</sect3>
</sect2>
<sect2 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md91">
<title><emphasis>Run the app</emphasis></title><para><blockquote><para><zwj/>Launch the FastAPI application agent on a <emphasis>Virtual Environment or Poetry</emphasis> setup by executing the following command: </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">python<sp/>-m<sp/>uvicorn<sp/>main:app<sp/>--reload</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/>Visit <ulink url="http://localhost:8000">http://localhost:8000</ulink> in any web browser and explore your research! </para>
</blockquote><linebreak/>
</para>
</sect2>
</sect1>
<sect1 id="md__2tmp_2github__repos__arch__doc__gen_2yshishenya_2rob_2docs_2docs_2gpt-researcher_2getting-started_1autotoc_md92">
<title>Try it with Docker</title><para><blockquote><para><zwj/><bold>Step 1</bold> - Install Docker </para>
</blockquote>Follow instructions at <ulink url="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</ulink></para>
<para><blockquote><para><zwj/><bold>Step 2</bold> - Create .env file with your OpenAI Key or simply export it </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">$<sp/>export<sp/>OPENAI_API_KEY={Your<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
<codeline><highlight class="normal">$<sp/>export<sp/>TAVILY_API_KEY={Your<sp/>Tavily<sp/>API<sp/>Key<sp/>here}</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/><bold>Step 3</bold> - Run the application </para>
</blockquote><programlisting filename=".bash"><codeline><highlight class="normal">$<sp/>docker-compose<sp/>up</highlight></codeline>
</programlisting></para>
<para><blockquote><para><zwj/><bold>Step 4</bold> - Go to <ulink url="http://localhost:8000">http://localhost:8000</ulink> on any browser and enjoy researching! </para>
</blockquote></para>
</sect1>
    </detaileddescription>
    <location file="/tmp/github_repos_arch_doc_gen/yshishenya/rob/docs/docs/gpt-researcher/getting-started.md"/>
  </compounddef>
</doxygen>
