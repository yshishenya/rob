<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="documents-report-source_8py" kind="file" language="Python">
    <compoundname>documents-report-source.py</compoundname>
    <innernamespace refid="namespacedocuments-report-source">documents-report-source</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedocuments-report-source" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>asyncio</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pytest</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegpt__researcher_1_1master_1_1agent" kindref="compound">gpt_researcher.master.agent</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GPTResearcher<sp/><sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>this<sp/>path<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dotenv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_dotenv</highlight></codeline>
<codeline lineno="6"><highlight class="normal">load_dotenv()</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Define<sp/>the<sp/>report<sp/>types<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacedocuments-report-source_1abe193fbaff482c0f4acb6195464e2bd2" refkind="member"><highlight class="normal">report_types<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;research_report&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;custom_report&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtopic_report&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;summary_report&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;detailed_report&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;quick_report&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Define<sp/>a<sp/>common<sp/>query<sp/>and<sp/>sources<sp/>for<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacedocuments-report-source_1adde104a314af0f4c17bc4c902abf5857" refkind="member"><highlight class="normal">query<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;What<sp/>can<sp/>you<sp/>tell<sp/>me<sp/>about<sp/>myself<sp/>based<sp/>on<sp/>my<sp/>documents?&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Define<sp/>the<sp/>output<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacedocuments-report-source_1af938f99fc526afa847916a04f53f20e7" refkind="member"><highlight class="normal">output_dir<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./outputs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">@pytest.mark.asyncio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">@pytest.mark.parametrize(&quot;report_type&quot;,<sp/>report_types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacedocuments-report-source_1ad12a9b38a596a55ac62431fe1116e367" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">async<sp/>def<sp/></highlight><highlight class="normal"><ref refid="namespacedocuments-report-source_1ad12a9b38a596a55ac62431fe1116e367" kindref="member">test_gpt_researcher</ref>(report_type):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>the<sp/>output<sp/>directory<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(output_dir):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(output_dir)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>an<sp/>instance<sp/>of<sp/>GPTResearcher<sp/>with<sp/>report_source<sp/>set<sp/>to<sp/>&quot;documents&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>researcher<sp/>=<sp/><ref refid="classgpt__researcher_1_1master_1_1agent_1_1GPTResearcher" kindref="compound">GPTResearcher</ref>(query=query,<sp/>report_type=report_type,<sp/>report_source=</highlight><highlight class="stringliteral">&quot;documents&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Conduct<sp/>research<sp/>and<sp/>write<sp/>the<sp/>report</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>await<sp/>researcher.conduct_research()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/>await<sp/>researcher.write_report()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>the<sp/>expected<sp/>output<sp/>filenames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pdf_filename<sp/>=<sp/>os.path.join(output_dir,<sp/>f</highlight><highlight class="stringliteral">&quot;{report_type}.pdf&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>docx_filename<sp/>=<sp/>os.path.join(output_dir,<sp/>f</highlight><highlight class="stringliteral">&quot;{report_type}.docx&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>PDF<sp/>and<sp/>DOCX<sp/>files<sp/>are<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>os.path.exists(pdf_filename),<sp/>f&quot;PDF<sp/>file<sp/>not<sp/>found<sp/>for<sp/>report<sp/>type:<sp/>{report_type}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>os.path.exists(docx_filename),<sp/>f&quot;DOCX<sp/>file<sp/>not<sp/>found<sp/>for<sp/>report<sp/>type:<sp/>{report_type}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Clean<sp/>up<sp/>the<sp/>generated<sp/>files<sp/>(optional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>os.remove(pdf_filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>os.remove(docx_filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pytest.main()</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/yshishenya/rob/tests/documents-report-source.py"/>
  </compounddef>
</doxygen>
